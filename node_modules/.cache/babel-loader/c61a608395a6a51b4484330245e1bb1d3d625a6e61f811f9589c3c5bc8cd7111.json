{"ast":null,"code":"var _jsxFileName = \"/Users/lazynoob/Documents/Git/test_repo/App/src/components/Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TaskForm from './TaskForm';\nimport Timer from './Timer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [activeTask, setActiveTask] = useState(null);\n  const [isRunning, setIsRunning] = useState(false);\n  const handleAddTask = newTask => {\n    setTasks([...tasks, {\n      ...newTask,\n      id: Date.now()\n    }]);\n  };\n  const startTask = task => {\n    setActiveTask(task);\n    setIsRunning(true);\n  };\n  const stopTask = () => {\n    setActiveTask(null);\n    setIsRunning(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Yoga Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n        onAddTask: handleAddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasks-list\",\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: task.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Steps: \", task.steps.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => startTask(task),\n            children: \"Start Practice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), activeTask && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-section\",\n      children: /*#__PURE__*/_jsxDEV(Timer, {\n        task: activeTask,\n        isRunning: isRunning,\n        onComplete: stopTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"wqxFEgX3+ot2CwagEgffOdwxND0=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","TaskForm","Timer","jsxDEV","_jsxDEV","Dashboard","_s","tasks","setTasks","activeTask","setActiveTask","isRunning","setIsRunning","handleAddTask","newTask","id","Date","now","startTask","task","stopTask","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddTask","map","name","steps","length","onClick","onComplete","_c","$RefreshReg$"],"sources":["/Users/lazynoob/Documents/Git/test_repo/App/src/components/Dashboard.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport TaskForm from './TaskForm';\nimport Timer from './Timer';\n\ninterface Step {\n  name: string;\n  duration: number;\n  breakDuration: number;\n}\n\ninterface Task {\n  id: number;\n  name: string;\n  steps: Step[];\n}\n\nconst Dashboard: React.FC = () => {\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [activeTask, setActiveTask] = useState<Task | null>(null);\n  const [isRunning, setIsRunning] = useState(false);\n\n  const handleAddTask = (newTask: Task) => {\n    setTasks([...tasks, { ...newTask, id: Date.now() }]);\n  };\n\n  const startTask = (task: Task) => {\n    setActiveTask(task);\n    setIsRunning(true);\n  };\n\n  const stopTask = () => {\n    setActiveTask(null);\n    setIsRunning(false);\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"tasks-section\">\n        <h2>Your Yoga Tasks</h2>\n        <TaskForm onAddTask={handleAddTask} />\n        <div className=\"tasks-list\">\n          {tasks.map(task => (\n            <div key={task.id} className=\"task-item\">\n              <h3>{task.name}</h3>\n              <p>Steps: {task.steps.length}</p>\n              <button onClick={() => startTask(task)}>Start Practice</button>\n            </div>\n          ))}\n        </div>\n      </div>\n      {activeTask && (\n        <div className=\"timer-section\">\n          <Timer\n            task={activeTask}\n            isRunning={isRunning}\n            onComplete={stopTask}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}